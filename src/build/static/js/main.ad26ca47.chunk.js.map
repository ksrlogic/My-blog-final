{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticleList.js","pages/NotFoundPage.js","components/commentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArtilcePage.js","pages/ArticleListPage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Homepage","AboutPage","articles","name","title","content","ArticleList","map","article","key","className","to","substring","NotFoundPage","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","articleContent","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","ArticleListPage","NavBar","App","path","component","exact","Aboutpage","ArtilcePage","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ad26ca47.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Homepage = () => (\r\n  <>\r\n    <h1>Hello, Welcome to my Blog </h1>\r\n    <p>\r\n      Incididunt aliqua ipsum amet non ex do commodo incididunt eu cillum minim\r\n      esse. Ullamco do ad esse in non enim ea sunt. Excepteur occaecat veniam\r\n      nostrud tempor magna non proident labore laborum nulla enim proident\r\n      cillum.\r\n    </p>\r\n    <p>\r\n      Incididunt aliqua ipsum amet non ex do commodo incididunt eu cillum minim\r\n      esse. Ullamco do ad esse in non enim ea sunt. Excepteur occaecat veniam\r\n      nostrud tempor magna non proident labore laborum nulla enim proident\r\n      cillum.\r\n    </p>\r\n  </>\r\n);\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\n\r\nconst AboutPage = () => (\r\n  <>\r\n    <h1>About Me </h1>\r\n    <p>\r\n      Incididunt aliqua ipsum amet non ex do commodo incididunt eu cillum minim\r\n      esse. Ullamco do ad esse in non enim ea sunt. Excepteur occaecat veniam\r\n      nostrud tempor magna non proident labore laborum nulla enim proident\r\n      cillum.\r\n    </p>\r\n    <p>\r\n      Incididunt aliqua ipsum amet non ex do commodo incididunt eu cillum minim\r\n      esse. Ullamco do ad esse in non enim ea sunt. Excepteur occaecat veniam\r\n      nostrud tempor magna non proident labore laborum nulla enim proident\r\n      cillum.\r\n    </p>\r\n  </>\r\n);\r\n\r\nexport default AboutPage;\r\n","const articles = [\r\n  {\r\n    name: \"learn-react\",\r\n    title: \"The Fastest Way to Learn React\",\r\n    content: [\r\n      \"Ex commodo commodo anim ipsum incididunt nulla. Laboris adipisicing enim eiusmod nisi sint officia magna. Consequat id tempor labore ipsum est. Cupidatat amet veniam amet ut. Ex Lorem laboris id quis dolor velit laboris in aute aute labore sit.\",\r\n      \"Nostrud irure consectetur laboris veniam amet proident non qui nostrud dolor ut aliquip. Anim laborum est nostrud Lorem cillum irure pariatur. Eu cillum exercitation magna fugiat ut labore. Veniam duis elit ad magna. Lorem mollit amet in est do proident tempor cupidatat elit exercitation adipisicing deserunt est nostrud. Eu velit eu mollit incididunt aute Lorem in ex ad exercitation ad elit minim nostrud.\",\r\n      \"Non deserunt dolor ut occaecat amet. In ipsum elit irure non irure tempor dolore nostrud fugiat enim laboris. Adipisicing eu Lorem minim reprehenderit do occaecat.\",\r\n    ],\r\n  },\r\n  {\r\n    name: \"learn-node\",\r\n    title: \"Learn-node\",\r\n    content: [\r\n      \"Ex commodo commodo anim ipsum incididunt nulla. Laboris adipisicing enim eiusmod nisi sint officia magna. Consequat id tempor labore ipsum est. Cupidatat amet veniam amet ut. Ex Lorem laboris id quis dolor velit laboris in aute aute labore sit.\",\r\n      \"Nostrud irure consectetur laboris veniam amet proident non qui nostrud dolor ut aliquip. Anim laborum est nostrud Lorem cillum irure pariatur. Eu cillum exercitation magna fugiat ut labore. Veniam duis elit ad magna. Lorem mollit amet in est do proident tempor cupidatat elit exercitation adipisicing deserunt est nostrud. Eu velit eu mollit incididunt aute Lorem in ex ad exercitation ad elit minim nostrud.\",\r\n      \"Non deserunt dolor ut occaecat amet. In ipsum elit irure non irure tempor dolore nostrud fugiat enim laboris. Adipisicing eu Lorem minim reprehenderit do occaecat.\",\r\n    ],\r\n  },\r\n];\r\n\r\nexport default articles;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ArticleList = ({ articles }) => {\r\n  return (\r\n    <>\r\n      {articles.map((article, key) => (\r\n        <Link\r\n          className=\"article-list-item\"\r\n          key={key}\r\n          to={`/article/${article.name}`}\r\n        >\r\n          <h3>{article.title}</h3>\r\n          <p>{article.content[0].substring(0, 150)}...</p>\r\n        </Link>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticleList;\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => <h1>404: Page Not Found</h1>;\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\n\r\nconst CommentsList = ({ comments }) => (\r\n  <>\r\n    {comments.map((comment, key) => (\r\n      <div className=\"comment\" key={key}>\r\n        <h4>{comment.username}</h4>\r\n        <p>{comment.text}</p>\r\n      </div>\r\n    ))}\r\n    ;\r\n  </>\r\n);\r\n\r\nexport default CommentsList;\r\n","import React from \"react\";\r\n\r\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\r\n  const upvoteArticle = async () => {\r\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n      method: \"post\",\r\n    });\r\n    const body = await result.json();\r\n    setArticleInfo(body);\r\n  };\r\n  return (\r\n    <div id=\"upvotes-section\">\r\n      <button\r\n        onClick={() => {\r\n          upvoteArticle();\r\n        }}\r\n      >\r\n        Add Upvote\r\n      </button>\r\n      <p>This post has been updated {upvotes} time</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpvotesSection;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddCommentForm = ({ setArticleInfo, articleName }) => {\r\n  const [username, setUsername] = useState(``);\r\n  const [commentText, setCommentText] = useState(``);\r\n\r\n  const addComment = async () => {\r\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n      method: `post`,\r\n      body: JSON.stringify({ username, text: commentText }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const body = await result.json();\r\n    setArticleInfo(body);\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-comment-form\">\r\n      <h3>Add a Comment</h3>\r\n      <label>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(event) => {\r\n            setUsername(event.target.value);\r\n          }}\r\n        ></input>\r\n      </label>\r\n      <label>\r\n        Comment:\r\n        <textarea\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          value={commentText}\r\n          onChange={(event) => {\r\n            setCommentText(event.target.value);\r\n          }}\r\n        />\r\n      </label>\r\n      <button onClick={addComment}>Add Comment</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport articleContent from \"./article-content\";\r\nimport ArticleList from \"../components/ArticleList\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport CommentsList from \"../components/commentsList\";\r\nimport UpvotesSection from \"../components/UpvotesSection\";\r\nimport AddCommentForm from \"../components/AddCommentForm\";\r\n\r\nconst ArticlePage = ({ match }) => {\r\n  const name = match.params.name;\r\n  const article = articleContent.find((article) => article.name === name);\r\n\r\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetch(`/api/articles/${name}`);\r\n      const body = await result.json();\r\n      setArticleInfo(body);\r\n    };\r\n    fetchData();\r\n  }, [name]);\r\n\r\n  if (!article) return <NotFoundPage />;\r\n\r\n  const otherArticles = articleContent.filter(\r\n    (article) => article.name !== name\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h1>{article.title}</h1>\r\n      <UpvotesSection\r\n        articleName={name}\r\n        setArticleInfo={setArticleInfo}\r\n        upvotes={articleInfo.upvotes}\r\n      />\r\n      {article.content.map((paragraph, key) => {\r\n        return <p key={key}>{paragraph}</p>;\r\n      })}\r\n      <CommentsList comments={articleInfo.comments} />\r\n      <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n      <h3>Other Articles:</h3>\r\n      <ArticleList articles={otherArticles} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticlePage;\r\n","import React from \"react\";\r\nimport ArticleList from \"../components/ArticleList\";\r\nimport articles from \"./article-content\";\r\nconst ArticleListPage = () => (\r\n  <>\r\n    <h1>Articles </h1>\r\n    <ArticleList articles={articles} />\r\n  </>\r\n);\r\n\r\nexport default ArticleListPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/articles-list\">Articles</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Homepage from \"./pages/HomePage\";\nimport Aboutpage from \"./pages/AboutPage\";\nimport ArtilcePage from \"./pages/ArtilcePage\";\nimport ArticleListPage from \"./pages/ArticleListPage\";\nimport NavBar from \"./NavBar\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={Homepage} exact />\n            <Route path=\"/about\" component={Aboutpage} />\n            <Route path=\"/articles-list\" component={ArticleListPage} />\n            <Route path=\"/article/:name\" component={ArtilcePage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}